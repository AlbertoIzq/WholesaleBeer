// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WholesaleBeer.API.Data;

#nullable disable

namespace WholesaleBeer.API.Migrations
{
    [DbContext(typeof(WholesaleBeerDbContext))]
    [Migration("20241008222426_seedBeerAndBeerStock")]
    partial class seedBeerAndBeerStock
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WholesaleBeer.API.Models.Domain.Beer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AlcoholContentPercentage")
                        .HasColumnType("float");

                    b.Property<Guid>("BreweryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BreweryId");

                    b.ToTable("Beers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("771f94ac-9bd6-4c82-2457-08dce27be8ae"),
                            AlcoholContentPercentage = 6.2000000000000002,
                            BreweryId = new Guid("8db2bb14-5ae6-4894-9aab-205d29bfb176"),
                            Name = "Orval",
                            Price = 3.7000000000000002
                        },
                        new
                        {
                            Id = new Guid("6e3b4a15-ae20-40a1-114a-08dce2d288ad"),
                            AlcoholContentPercentage = 11.300000000000001,
                            BreweryId = new Guid("91d8c67c-c92b-48a4-95b3-77182bfcbf73"),
                            Name = "Rochefort 10",
                            Price = 4.0999999999999996
                        },
                        new
                        {
                            Id = new Guid("7aefcee4-347f-4184-114b-08dce2d288ad"),
                            AlcoholContentPercentage = 9.1999999999999993,
                            BreweryId = new Guid("91d8c67c-c92b-48a4-95b3-77182bfcbf73"),
                            Name = "Rochefort 8",
                            Price = 3.0499999999999998
                        },
                        new
                        {
                            Id = new Guid("5b71078e-3e4e-495c-c75b-08dce2d581f8"),
                            AlcoholContentPercentage = 10.199999999999999,
                            BreweryId = new Guid("53965366-20b3-4f2d-9972-a886d6972c1f"),
                            Name = "Trappist Westvleteren 12",
                            Price = 2.3300000000000001
                        },
                        new
                        {
                            Id = new Guid("7503faeb-f43c-428a-c75c-08dce2d581f8"),
                            AlcoholContentPercentage = 8.0,
                            BreweryId = new Guid("53965366-20b3-4f2d-9972-a886d6972c1f"),
                            Name = "Trappist Westvleteren 8",
                            Price = 2.04
                        },
                        new
                        {
                            Id = new Guid("527fad60-6791-41d7-aadb-439805a5957b"),
                            AlcoholContentPercentage = 9.0,
                            BreweryId = new Guid("36a69969-2a36-4f96-b037-b5603fe94a78"),
                            Name = "Chimay Bleu",
                            Price = 3.6000000000000001
                        },
                        new
                        {
                            Id = new Guid("b333123a-b777-41bc-a457-d6b28c2acb91"),
                            AlcoholContentPercentage = 9.5,
                            BreweryId = new Guid("62410140-4fb9-4662-8ef6-b5aa9dd7aa5d"),
                            Name = "Westmalle Tripel",
                            Price = 2.6899999999999999
                        });
                });

            modelBuilder.Entity("WholesaleBeer.API.Models.Domain.BeerStock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BeerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StockLeft")
                        .HasColumnType("int");

                    b.Property<Guid>("WholesalerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BeerId");

                    b.HasIndex("WholesalerId");

                    b.ToTable("BeerStocks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0d646172-29dd-41f8-aa1e-8483980cb9ef"),
                            BeerId = new Guid("771f94ac-9bd6-4c82-2457-08dce27be8ae"),
                            StockLeft = 150,
                            WholesalerId = new Guid("9fc5f185-c6c3-4bcd-90c0-74e35304d69c")
                        },
                        new
                        {
                            Id = new Guid("677d69a7-1c81-4b19-b178-8a473390e96a"),
                            BeerId = new Guid("6e3b4a15-ae20-40a1-114a-08dce2d288ad"),
                            StockLeft = 80,
                            WholesalerId = new Guid("9fc5f185-c6c3-4bcd-90c0-74e35304d69c")
                        },
                        new
                        {
                            Id = new Guid("13e5a2f2-cf06-4cd7-83e2-03cd681878ef"),
                            BeerId = new Guid("7aefcee4-347f-4184-114b-08dce2d288ad"),
                            StockLeft = 15,
                            WholesalerId = new Guid("5c8e5f49-652b-42b0-8418-cd5a0ddba3fd")
                        });
                });

            modelBuilder.Entity("WholesaleBeer.API.Models.Domain.Brewery", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Breweries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("53965366-20b3-4f2d-9972-a886d6972c1f"),
                            Name = "Abbaye St Sixte Westvleteren"
                        },
                        new
                        {
                            Id = new Guid("62410140-4fb9-4662-8ef6-b5aa9dd7aa5d"),
                            Name = "Abbaye Notre Dame du Sacre Coeur de Westmalle"
                        },
                        new
                        {
                            Id = new Guid("91d8c67c-c92b-48a4-95b3-77182bfcbf73"),
                            Name = "Abbaye Notre Dame de St Remy"
                        },
                        new
                        {
                            Id = new Guid("8db2bb14-5ae6-4894-9aab-205d29bfb176"),
                            Name = "Abbaye d'Orval"
                        },
                        new
                        {
                            Id = new Guid("36a69969-2a36-4f96-b037-b5603fe94a78"),
                            Name = "Abbaye de Notre Dame de Scourmont"
                        });
                });

            modelBuilder.Entity("WholesaleBeer.API.Models.Domain.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BeerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("WholesalerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BeerId");

                    b.HasIndex("WholesalerId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("WholesaleBeer.API.Models.Domain.Wholesaler", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Wholesalers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9fc5f185-c6c3-4bcd-90c0-74e35304d69c"),
                            Name = "Belgibeer"
                        },
                        new
                        {
                            Id = new Guid("5c8e5f49-652b-42b0-8418-cd5a0ddba3fd"),
                            Name = "Bollaert Wijnhuis"
                        },
                        new
                        {
                            Id = new Guid("57ed2087-b816-4dcd-a3f1-3451822bb545"),
                            Name = "Bierhandel Dekoninck"
                        },
                        new
                        {
                            Id = new Guid("34acf5ff-19c2-477c-8a5b-b89b479002ce"),
                            Name = "Drinks Center Fontana"
                        },
                        new
                        {
                            Id = new Guid("0ffec24c-e643-410d-aafb-e0cefa0934b1"),
                            Name = "Drink Services - Brasserie Corman"
                        });
                });

            modelBuilder.Entity("WholesaleBeer.API.Models.Domain.Beer", b =>
                {
                    b.HasOne("WholesaleBeer.API.Models.Domain.Brewery", "Brewery")
                        .WithMany()
                        .HasForeignKey("BreweryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brewery");
                });

            modelBuilder.Entity("WholesaleBeer.API.Models.Domain.BeerStock", b =>
                {
                    b.HasOne("WholesaleBeer.API.Models.Domain.Beer", "Beer")
                        .WithMany()
                        .HasForeignKey("BeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WholesaleBeer.API.Models.Domain.Wholesaler", "Wholesaler")
                        .WithMany()
                        .HasForeignKey("WholesalerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beer");

                    b.Navigation("Wholesaler");
                });

            modelBuilder.Entity("WholesaleBeer.API.Models.Domain.OrderDetail", b =>
                {
                    b.HasOne("WholesaleBeer.API.Models.Domain.Beer", "Beer")
                        .WithMany()
                        .HasForeignKey("BeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WholesaleBeer.API.Models.Domain.Wholesaler", "Wholesaler")
                        .WithMany()
                        .HasForeignKey("WholesalerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beer");

                    b.Navigation("Wholesaler");
                });
#pragma warning restore 612, 618
        }
    }
}
